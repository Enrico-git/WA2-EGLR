version: '2'
volumes:
  mongodb_server_data:
services:
  mongo:
    image: mongo
    #restart: always
    container_name: mongo
    #environment:
      #MONGO_INITDB_ROOT_USERNAME: root
      #MONGO_INITDB_ROOT_PASSWORD: root
    #replication:
     # replSetName: "rs0"
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]
    ports:
      - 27017:27017 
    volumes:
      #- ./keyfile:/keyfile
      - mongodb_server_data:/data/db
      #- ./mongo_bootstrap.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
      - 22888:2888
      - 23888:3888
  
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      #KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      #KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  
  connect:
    image: debezium/connect:1.6
    container_name: kafka_connect
    ports:
     - 8083:8083
    links:
     - kafka
     - zookeeper
     - mongo
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
